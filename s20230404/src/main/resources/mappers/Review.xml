<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.travelAlone.s20230404.ReviewMapper">

<!-- 리뷰글 전체 갯수 세기 -->
<select id="smReviewTotal" resultType="int">
	select Count(*) FROM REVIEW
</select>

<!-- 리뷰 목록 가져오기 -->
		<select id="smReviewList" parameterType="Review" resultType="Review" >
    		<![CDATA[
				SELECT *
				FROM
				(	SELECT rownum rn , a.*
				        FROM
				                   (select   MEMBER_ID
											,REVIEW_ID
											,RESTAURANT_ID
											,HOUSE_ID
											,TRAVEL_ID
											,R_COMMON_TSR_CATEGORY
											,R_CONTENT
											,R_SCORE
											,CREATE_DATE
											,MODIFIED_DATE										
									  from  REVIEW									  									  									  									   
									  order by REVIEW_ID desc) a
			)   
		 		WHERE  rn >= #{start} 
		 		and    rn <= #{end} 
		 	 ]]>	
			
		</select>
		
<!-- 리뷰글 가져오기 (여행지) -->
		<select id="smReviewSelOne"  resultType="Review">		
		  SELECT r_score, r_content
		  FROM review
		  INNER JOIN travel ON review.travel_id = travel.travel_id
		  WHERE travel.travel_id = #{review.travel_id};  
		</select>

<!-- 리뷰 글 수정하기 -->
		<update id="smReviewUpdate" parameterType="Review">
			SELECT r_score, r_content
			FROM review
			INNER JOIN travel ON review.travel_id = travel.travel_id
			WHERE travel.travel_id = #{travel_id)
		</update>

		<!--  리뷰 글 삭제하기 -->
		<delete id="deleteReview" parameterType="int">
			delete from REVIEW where REVIEW_ID = #{review_id}
		</delete>



</mapper>

<!-- 
//MEMBER_ID					NUMBER					회원 ID
//REVIEW_ID					NUMBER					리뷰 ID
//RESTAURANT_ID				NUMBER					맛집 ID
//HOUSE_ID					NUMBER					숙소 ID
//REVIEW_ID					NUMBER					여행지 ID
//R_COMMON_TSR_CATEGORY		VARCHAR2(20)			여행, 숙소, 맛집분류
//R_CONTENT					VARCHAR2(4000)			리뷰 내용
//R_SCORE					NUMBER					점수
//CREATE_DATE				DATE					생성일
//MODIFIED_DATE				DATE 					수정일--> 
